name: TQA-118
on:
  workflow_dispatch:

jobs:
  release:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

# Generating Release Notes in NEWS.rst
  release_notes:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
      - name: See current working directory
        run: pwd

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

 #Create GitHub Release
  github_release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Read NEWS.rst
        id: read_release_notes
        run: |
          if [ ! -f "NEWS.rst" ]; then
            echo "ERROR: NEWS.rst file not found!"
            exit 1
          fi
          RELEASE_NOTES=$(cat "NEWS.rst")
          echo "RELEASE_NOTES<<EOF" >> $GITHUB_ENV
          echo "${RELEASE_NOTES}" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV


      - name: Read version from VERSION.txt
        id: read_version
        run: |
          VERSION=$(cat "code/django/VERSION.txt")
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
 
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          release_name: ${{ env.VERSION }}
          body_path: "NEWS.rst" 
          draft: false
          prerelease: false

      - name: Clear contents of NEWS.rst and newsfragments
        run: | 
          echo "" > NEWS.rst
          find newsfragments -type f ! -name '.gitignore' -delete

      - name: Commit and Push Empty NEWS.rst
        uses: EndBug/add-and-commit@v9
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          add: '["NEWS.rst", "newsfragments"]'
          author_name: 'Github Actions - Release Notes Workflow'
          author_email: actions@github.com
          commit: --signoff
          committer_name: 'Github Actions - Release Notes Workflow'
          committer_email: actions@github.com
          cwd: "."
          default_author: github_actor
          fetch: true
          message: "Clear contents of NEWS.rst and newsfragments"
          pathspec_error_handling: exitImmediately
          push: true
        env:
          GITHUB_TOKEN: ${{ secrets.ACTIONS_PAT }}