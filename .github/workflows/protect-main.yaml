name: Protect Main and Auto-version

on:
  pull_request_target:
    types:
      - opened
      - reopened
    branches:
      - main
jobs:
  close:
    runs-on: ubuntu-latest
    outputs:
      closed: ${{ steps.close.outputs.closed }}
      issue: ${{ steps.issue.outputs.issue }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
      - name: Check if valid feature or bugfix branch
        run: >
          echo "VALID_BRANCH_NAME=$([[ 'FEATURE-AQC-1111-first-pr' =~ (FEATURE|BUGFIX)-AQC-[0-9]+-.+ ]] && echo true)" >> $GITHUB_ENV

      - name: Increment version number based on branch name

        run: |
          GH_ISSUE_TYPE=env.ISSUE_TYPE python -c "
          import os
          import re

          issue_type = os.getenv('GH_ISSUE_TYPE')
          version_file = 'version.txt'
          with open(version_file, 'r') as file:
              version = file.read().strip()
          match = re.match(r'(\d+)\.(\d+)\.(\d+)', version)
          if match:
              major = match.group(1)
              minor = match.group(2)
              patch = match.group(3)
              print(major)
              print(minor)
              print(patch)
              if issue_type == 'FEATURE':
                  minor = int(minor) + 1
              elif issue_type == 'BUGFIX':
                  patch = int(patch) + 1
              new_version = f'{major}.{minor}.{patch}'
              with open(version_file, 'w') as file:
                  file.write(new_version)
          else:
              raise ValueError('Version format not recognized')"
